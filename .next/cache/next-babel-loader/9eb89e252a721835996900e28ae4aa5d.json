{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\advanced-react\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\SignIn.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport DisplayError from \"./ErrorMessage\";\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          name\n          email\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\nexport const SignIn = () => {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    password: \"\"\n  });\n  const [signin, {\n    data,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  const handleSubmit = async e => {\n    var _data$authenticateUse;\n\n    e.preventDefault();\n    console.log(data);\n    console.log(data === null || data === void 0 ? void 0 : (_data$authenticateUse = data.authenticateUserWithPassword) === null || _data$authenticateUse === void 0 ? void 0 : _data$authenticateUse.message);\n    await signin();\n    resetForm();\n  };\n\n  const error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === \"UserAuthenticationWithPasswordFailure\" ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    disabled: loading,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["D:/advanced-react/Advanced-React/sick-fits/frontend/components/SignIn.js"],"names":["useMutation","gql","React","useForm","Form","CURRENT_USER_QUERY","DisplayError","SIGNIN_MUTATION","SignIn","inputs","handleChange","resetForm","email","password","signin","data","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","console","log","authenticateUserWithPassword","message","error","__typename","undefined"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,MAAMC,eAAe,GAAGN,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,OAAO,MAAMO,MAAM,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCR,OAAO,CAAC;AAClDS,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CAAnD;AAIA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAT,IAA8BhB,WAAW,CAACO,eAAD,EAAkB;AAC/DU,IAAAA,SAAS,EAAER,MADoD;AAE/DS,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEd;AAAT,KAAD;AAF+C,GAAlB,CAA/C;;AAKA,QAAMe,YAAY,GAAG,MAAMC,CAAN,IAAW;AAAA;;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,aAAYA,IAAZ,gDAAYA,IAAI,CAAEU,4BAAlB,0DAAY,sBAAoCC,OAAhD;AACA,UAAMZ,MAAM,EAAZ;AACAH,IAAAA,SAAS;AACV,GAND;;AAQA,QAAMgB,KAAK,GACT,CAAAZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEU,4BAAN,CAAmCG,UAAnC,MACA,uCADA,GAEIb,IAFJ,aAEIA,IAFJ,uBAEIA,IAAI,CAAEU,4BAFV,GAGII,SAJN;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAET,YAA9B;AAA4C,IAAA,QAAQ,EAAEJ,OAAtD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEW;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAElB,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,KAAK,EAAED,MAAM,CAACI,QAJhB;AAKE,UAAA,QAAQ,EAAEH;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAtDM","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport React from \"react\";\r\nimport useForm from \"../lib/useForm\";\r\nimport Form from \"./styles/Form\";\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport DisplayError from \"./ErrorMessage\";\r\nconst SIGNIN_MUTATION = gql`\r\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\r\n    authenticateUserWithPassword(email: $email, password: $password) {\r\n      ... on UserAuthenticationWithPasswordSuccess {\r\n        item {\r\n          id\r\n          name\r\n          email\r\n        }\r\n      }\r\n      ... on UserAuthenticationWithPasswordFailure {\r\n        code\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SignIn = () => {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [signin, { data, loading }] = useMutation(SIGNIN_MUTATION, {\r\n    variables: inputs,\r\n    refetchQueries: [{ query: CURRENT_USER_QUERY }]\r\n  });\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    console.log(data);\r\n    console.log(data?.authenticateUserWithPassword?.message);\r\n    await signin();\r\n    resetForm();\r\n  };\r\n\r\n  const error =\r\n    data?.authenticateUserWithPassword.__typename ===\r\n    \"UserAuthenticationWithPasswordFailure\"\r\n      ? data?.authenticateUserWithPassword\r\n      : undefined;\r\n\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit} disabled={loading}>\r\n      <h2>Sign Into Your Account</h2>\r\n      <DisplayError error={error} />\r\n      <fieldset>\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          Email\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Sign In!</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}